// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0
// source: football_fan.sql

package sqlc

import (
	"context"

	"github.com/google/uuid"
)

const createFootballFan = `-- name: CreateFootballFan :one
INSERT INTO football_fans (id, name, email, team) VALUES ($1, $2, $3, $4) RETURNING id, name, email, team, created_at, updated_at
`

type CreateFootballFanParams struct {
	ID    uuid.UUID
	Name  string
	Email string
	Team  string
}

func (q *Queries) CreateFootballFan(ctx context.Context, arg CreateFootballFanParams) (FootballFan, error) {
	row := q.db.QueryRowContext(ctx, createFootballFan,
		arg.ID,
		arg.Name,
		arg.Email,
		arg.Team,
	)
	var i FootballFan
	err := row.Scan(
		&i.ID,
		&i.Name,
		&i.Email,
		&i.Team,
		&i.CreatedAt,
		&i.UpdatedAt,
	)
	return i, err
}

const findFootballFanByEmail = `-- name: FindFootballFanByEmail :one
SELECT id, name, email, team, created_at, updated_at FROM football_fans WHERE email = $1
`

func (q *Queries) FindFootballFanByEmail(ctx context.Context, email string) (FootballFan, error) {
	row := q.db.QueryRowContext(ctx, findFootballFanByEmail, email)
	var i FootballFan
	err := row.Scan(
		&i.ID,
		&i.Name,
		&i.Email,
		&i.Team,
		&i.CreatedAt,
		&i.UpdatedAt,
	)
	return i, err
}
