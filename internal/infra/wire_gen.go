// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package infra

import (
	"database/sql"
	"github.com/chriswp/api-rest-campeonato/internal/infra/handler"
	"github.com/chriswp/api-rest-campeonato/internal/infra/repository"
	"github.com/chriswp/api-rest-campeonato/internal/usecase"
	"github.com/google/wire"
)

// Injectors from wire.go:

func NewCompetitionUseCase() *usecase.CompetitionUseCase {
	competitionRepository := repository.NewCompetitionRepositoryImpl()
	competitionUseCase := usecase.NewCompetitionUsecase(competitionRepository)
	return competitionUseCase
}

func NewCompetitionHandler() *handler.CompetitionHandler {
	competitionRepository := repository.NewCompetitionRepositoryImpl()
	competitionUseCase := usecase.NewCompetitionUsecase(competitionRepository)
	competitionHandler := handler.NewCompetitionHandler(competitionUseCase)
	return competitionHandler
}

func NewUserHandler(db *sql.DB) *handler.UserHandler {
	userRepository := repository.NewUserRepositoryImpl(db)
	userUseCase := usecase.NewUserUseCase(userRepository)
	userHandler := handler.NewUserHandler(userUseCase)
	return userHandler
}

// wire.go:

var CompetitionUseCaseSet = wire.NewSet(repository.NewCompetitionRepositoryImpl, usecase.NewCompetitionUsecase)

var UserUseCaseSet = wire.NewSet(repository.NewUserRepositoryImpl, usecase.NewUserUseCase)
